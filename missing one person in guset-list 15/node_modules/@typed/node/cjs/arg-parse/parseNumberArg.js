"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseNumberArg = void 0;
const list_1 = require("@typed/list");
const maybe_1 = require("@typed/maybe");
const createParser_1 = require("./createParser");
const getPositionalArgumentValue_1 = require("./getPositionalArgumentValue");
function parseNumberArg(name, options = {}) {
    return createParser_1.createParser(name, options, (index, args) => {
        const [valueIndex, value] = parseNumberArgByPosition(index, args);
        const indexesUsed = list_1.uniq([index, valueIndex]);
        const result = [
            indexesUsed,
            maybe_1.map((value) => ({ [name]: value }), value),
        ];
        return result;
    });
}
exports.parseNumberArg = parseNumberArg;
function parseNumberArgByPosition(index, args) {
    const positionalArg = getPositionalArgumentValue_1.getPositionalArgumentValue(index, args);
    if (maybe_1.isNothing(positionalArg)) {
        return [index, maybe_1.Nothing];
    }
    const [valueIndex, arg] = maybe_1.fromJust(positionalArg);
    const value = parseFloat(arg);
    return [valueIndex, Number.isNaN(value) ? maybe_1.Nothing : maybe_1.Just.of(value)];
}
//# sourceMappingURL=parseNumberArg.js.map