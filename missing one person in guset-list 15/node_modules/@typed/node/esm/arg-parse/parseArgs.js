import { fromJust, isNothing } from '@typed/maybe';
import { findRemainingArgs } from './findRemainingArgs';
import { parseBooleanArg } from './parseBooleanArg';
const helpParser = parseBooleanArg('help', { aliases: ['h'] });
export function* parseArgs(parsers) {
    const value = { _: [], help: false };
    const parsedIndexes = [];
    for (const { parse } of [helpParser, ...parsers]) {
        const [indexesUsed, maybeValue] = yield* parse();
        if (isNothing(maybeValue)) {
            continue;
        }
        parsedIndexes.push(...indexesUsed);
        Object.assign(value, fromJust(maybeValue));
    }
    Object.assign(value, yield* findRemainingArgs(parsedIndexes));
    return value;
}
//# sourceMappingURL=parseArgs.js.map