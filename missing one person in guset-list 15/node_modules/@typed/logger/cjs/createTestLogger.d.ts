import { Clock } from '@typed/timer';
import { Logger, LogLevel } from './types';
export declare type CreateTestLoggerOptions = {
    readonly logLevel: LogLevel;
    readonly clock: Clock;
};
export declare type TestLogger = {
    readonly logger: Logger;
    readonly getLogs: () => Logs;
};
export declare type Logs = ReadonlyArray<Log>;
export declare type Log = {
    readonly type: 'log';
    readonly message: string;
} | {
    readonly type: 'error';
    readonly message: string;
} | {
    readonly type: 'clear';
} | {
    readonly type: 'info';
    readonly message: string;
} | {
    readonly type: 'debug';
    readonly message: string;
} | {
    readonly type: 'timeStart';
    readonly label: string;
    readonly time: number;
} | {
    readonly type: 'timeEnd';
    readonly label: string;
    readonly time: number;
};
/**
 * Create a logger suitable for testing environments.
 */
export declare function createTestLogger({ logLevel, clock }: CreateTestLoggerOptions): TestLogger;
//# sourceMappingURL=createTestLogger.d.ts.map